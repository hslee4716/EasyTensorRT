from easytrt import export_engine

if __name__=='__main__':
    '''    
    input -  [batch, 3, 224, 224]
    latent - [batch, 512]
    output - [batch, 3, 224, 224]
    '''
    dynamic = True

    dshape = {
        'input_ids':{'min': (1, 8), 'opt': (1, 256), 'max': (1, 512)},
        'attention_mask':{'min': (1, 8), 'opt': (1, 256), 'max': (1, 512)}, 
        'logits':{'min':(1, 8, 30080), 'opt':(1, 256, 30080), 'max':(1, 512, 30080)},
        'present.0.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.1.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.2.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.1.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.4.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.5.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.6.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.7.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.8.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.9.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.10.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.11.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.12.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.11.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.14.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.15.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.40.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.17.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.18.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.19.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.20.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.21.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.22.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.21.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.24.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.25.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.26.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.27.key':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.0.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.1.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.2.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.1.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.4.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.5.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.6.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.7.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.8.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.9.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.10.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.11.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.12.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.11.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.14.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.15.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.40.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.17.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.18.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.19.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.20.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.21.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.22.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.21.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.24.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.25.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.26.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        'present.27.value':{'min': (1, 40, 8, 128), 'opt': (1, 40, 256, 128), 'max': (1, 40, 512, 128)},
        }
    
    export_engine("/home/team_ai/JMJ/nlp_model/kullm_dev/HS/sav_onnx2/decoder_model.onnx",
                  verbose='info', 
                  fp16=True,
                  dshapes=dshape if dynamic else None,
                  dynamic=dynamic,
                  out_pth="/home/team_ai/JMJ/nlp_model/kullm_dev/HS/kullm_12.8b_2.engine",
                  workspace=60)